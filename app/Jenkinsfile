pipeline {
	agent{
		node{
			label 'master'
		}
	}

	stages {
		stage('Git Checkout'){
			steps{
				cleanWs()
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'app']]]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitCred', url: 'https://github.com/erahaouisamia/repo_idemia/']]])
			}
        	}
		stage('Compile && build jar && docker image'){
			steps {
				dir("${env.WORKSPACE}/app/crud-api"){
					withDockerContainer(image: 'maven:3.6.3-openjdk-8')
					{
						sh label: '', script: 'mvn clean compile'
						sh 'mvn clean package'
					}
				}
			}
			post {
			    success {
			      sh 'docker image rm -f maven:3.6.3-openjdk-8'
			    }
          		}
		}
		stage('Frontend'){
			steps {
				dir("${env.WORKSPACE}/app/crud-frontend")
				{
					withDockerContainer(image: 'node:latest'){
						sh 'npm install'
						sh 'npm run build -- --prod' 
					}
				}
			}
			post {
			    success {
			      sh 'docker image rm -f node:latest'
			    }
          		}
		}
		stage('build docker images'){
			steps{
				dir("${env.WORKSPACE}/app/crud-api"){
					sh 'docker build -t backend:v1 .'
				}
				dir("${env.WORKSPACE}/app/crud-frontend"){
					sh 'docker build -t frontend:v1 .'
				}
			}
		}
        	stage ('docker image push to Nexus') {
		    steps {
			//withCredentials([usernamePassword(credentialsId: 'nexus-registry', usernameVariable: 'nexus_user', passwordVariable: 'nexus_password')]){
			 withDockerRegistry(credentialsId: 'nexus-registry', url: 'http://18.133.16.112:8083') {
				//sh 'docker login -u \$nexus_user -p \$nexus_password 18.133.16.112:8083'
				sh 'docker push backend:v1'
				sh 'docker push frontend:v1'
			}
		    }
        	}
		stage ('helm push to Nexus') {
			steps {
				dir("${env.WORKSPACE}/app"){
					withCredentials([usernamePassword(credentialsId: 'nexus-registry', usernameVariable: 'nexus_user', passwordVariable: 'nexus_password')]){
						withDockerContainer(args: '--entrypoint=', image: 'alpine/helm'){
							sh 'helm plugin install --version master https://github.com/sonatype-nexus-community/helm-nexus-push.git'
							sh 'helm repo add helmRepo http://18.133.16.112:8081/repository/helmRepo/ --username \$nexus_user --password \$nexus_password'
							sh 'helm nexus-push helmRepo app/Helm-chart --username \$nexus_user --password \$nexus_password'
						}
		    			}
        			}
			}
			post {
			    success {
			      sh 'docker image rm -f alpine/helm'
			    }
          		}
		}
    	}
	post {
	    success {
	      deleteDir()
	    }
  	}
}
