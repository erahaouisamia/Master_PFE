# -*- mode: ruby -*-
# vi: set ft=ruby :

N = 3


Vagrant.configure("2") do |config|

    config.ssh.insert_key = false
    #config.vm.boot_timeout = 600
    #config.ssh.private_key_path = "C:/Users/samia/.vagrant.d/insecure_private_key"
    #config.ssh.forward_agent = true
    #config.ssh.password = "ubuntu"
    #config.vm.synced_folder ".", "/vagrant"
    config.vm.synced_folder '.', '/vagrant', type: 'nfs'
        config.vm.provider "virtualbox" do |v|
            v.gui = true
        end
    #config.ssh.username = "ubuntu"
          
    config.vm.define "master" do |master|
        master.vm.hostname = "k8s-master"
        master.vm.box = "k8sbox"
        #master.ssh.username = "ubuntu"
        master.vm.network "private_network", ip: "192.168.50.10"
        master.vm.provision "ansible_local" do |ansible|
            ansible.playbook = "master-playbook.yml"
            ansible.extra_vars = {
                node_ip: "192.168.50.10",
                }
        master.vm.provision "shell", inline: <<-SHELL
            sudo -i
            cd /etc/docker
            cat > daemon.json <<EOF
            {"insecure-registries":["192.168.1.12:8083"]}
EOF
            systemctl daemon-reload
            systemctl restart docker 
        SHELL
        end
    end

    (1..N).each do |i|
        config.vm.define "node-#{i}" do |node|
            node.vm.hostname = "node-#{i}"
            #node.vm.synced_folder '.', '/vagrant', type: 'nfs'
            node.vm.box = "k8sbox"
            #node.ssh.username = "ubuntu"
        	node.vm.network "private_network", ip: "192.168.50.#{i + 10}"
            node.vm.provision "ansible_local" do |ansible|
                ansible.playbook = "node-playbook.yml"
                ansible.extra_vars = {
                    node_ip: "192.168.50.#{i + 10}",
                }
            end
            node.vm.provision "shell", inline: <<-SHELL
            sudo -i
            cd /etc/docker
            cat > daemon.json <<EOF
            {"insecure-registries":["192.168.1.12:8083"]}
EOF
            systemctl daemon-reload
            systemctl restart docker
        SHELL
        end
    end
end